
Instructions to use the code:
1) Use the su command to switch to root user before executing the program.
2) Add +x permission so as to execute code from bash.
3) You can run the code using two ways:
     By typing "python vulscan.py"
     By typing "./vulscan.py"
3)You need to install Apache Webserver on Linux Platform. You can use xampp as well. But opt for older version because newer version creates log file inside bin 
folders of kernel mostly. 
4) To run the code you need to type: "./vulscan.py -l /opt/lampp/logs/access_log --filters /home/sanket/Desktop/default_filter.xml"
Note: replace the paths given based on your access log path and filter file path.
5) I've attached the filter xml, use that only.

 /opt/lampp/lampp start

python vulscan.py -l /opt/lampp/logs/access_log --filters ./default_filter.xml --html -o ./

All these attacks have been covered in the program I've sent you:
xss-Cross Site Scripting (example: iframes or ads which appear from scammers like yoursites.com)
sqli-Sql Injection (example:irctc old website's tatkal booking)
csrf- Cross site Request Forgery (example: yoursites.xml and MPC Cleaner)
dos - denial of service (example: irctc booking)
dt - directory traversal (example: telnet applications in the 1990's like chatirc, findadate.com and current scenario ashleymadison.com)
spam - spamming attack (example: every other mail that says you've won a billion dollar) 
id - identity theft (example: arp spoof or ip spoofing, specific application under identity theft was Orkut)
ref - Direct Object References (example: none other than facebook- this guys track all your browsing data using this method and earn billions of dollar in form of analytics, know more read about fb analytics)
lfi - local file inclusion (example: regsvr.exe and svchost.exe and the C:\Google\AutoIt3.exe file in the windows operating system)

def help():
	print "Vulscan"
	print "usage:  ./vulscan.py [--log|-l log_file] [--filters|-f filter_file] [--period time-frame] [OPTIONS] [--attack a1,a2,..,an]"
	print "                   [--sample|-s 4.2]"
	print "   --log       |-l:  the apache log file './access_log' by default"
	print "   --filters   |-f:  the filter file     './default_filter.xml' by default"
	print "   --exhaustive|-e:  will report all type of attacks detected and not stop"
	print "                     at the first found"
	print "   --tough     |-u:  try to decode the potential attack vectors (may increase"
	print "                     the examination time)"
	print "   --period    |-p:  the period must be specified in the same format as in"
	print "                     the Apache logs using * as wild-card"
	print "                     ex: 21/May/1993:14:15;*/May/1993"
	print "                     if not specified at the end, the max or min are taken"
	print "   --html      |-h:  generate an HTML output"
	print "   --xml       |-x:  generate an XML output"
	print "   --text      |-t:  generate a simple text output (default)"
	print "   --except    |-c:  generate a file that contains the non examined logs due to the"
	print "                     main regular expression; ill-formed Apache log etc."
	print "   --attack    |-a:  specify the list of attacks to look for"
	print "                     list: xss, sqli, csrf, dos, dt, spam, id, ref, lfi"
	print "                     the list of attacks should not contains spaces and comma separated"
	print "                     ex: xss,sqli,lfi,ref"
	print "   --output    |-o:  specifying the output directory; by default, Vulscan will try to write"
	print "                     in the same directory as the log file"
	print "   --sample    |-s:  use a random sample of the lines, the number (float in [0,100]) is"
	print "                     the percentage, ex: --sample 0.1 for 1/1000"
